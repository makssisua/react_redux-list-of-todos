{"version":3,"sources":["store/actions.ts","store/index.ts","api/todos.ts","store/selectors.ts","api/user.ts","components/TodoList/TodosList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["LOAD_TODOS","LOAD_USER","CLEAR_USER","INPUT_VALUE","SELECT_VALUE","initialState","todos","user","inputValue","selectValue","store","createStore","state","action","type","payload","API_URL","getTodos","a","fetch","response","json","getTodosSelector","getUserSelector","getInputValue","getSelectValue","getUser","userId","TodosList","dispatch","useDispatch","useSelector","handelSelectUser","id","userFromServer","filterTodos","filteredTodos","filter","todo","completed","title","toLowerCase","includes","toLocaleLowerCase","useMemo","handleSelectChange","event","target","value","handleInputChange","useEffect","loadTodosFromServer","todosFromServer","className","onChange","map","classNames","checked","readOnly","onClick","CurrentUser","name","email","phone","App","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5de43adc.chunk.js","sourcesContent":["export const LOAD_TODOS = 'LOAD_TODOS';\nexport const LOAD_USER = 'LOAD_USER';\nexport const CLEAR_USER = 'CLEAR_USER';\nexport const INPUT_VALUE = 'INPUT_VALUE';\nexport const SELECT_VALUE = 'SELECT_VALUE';\n\nexport const loadTodosActions = (payload: Todo) => ({\n  type: LOAD_TODOS,\n  payload,\n});\n\nexport const loadUserAction = (payload: User) => ({\n  type: LOAD_USER,\n  payload,\n});\n\nexport const clearSelectedUser = () => ({\n  type: CLEAR_USER,\n});\n\nexport const setInputValue = (payload: string) => ({\n  type: INPUT_VALUE,\n  payload,\n});\n\nexport const setSelectValue = (payload: string) => ({\n  type: SELECT_VALUE,\n  payload,\n});\n","import { createStore } from 'redux';\nimport {\n  CLEAR_USER,\n  LOAD_TODOS,\n  LOAD_USER,\n  INPUT_VALUE,\n  SELECT_VALUE,\n} from './actions';\n\nconst initialState: State = {\n  todos: [],\n  user: null,\n  inputValue: '',\n  selectValue: '',\n};\n\nconst reducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case LOAD_TODOS:\n      return {\n        ...state,\n        todos: [...action.payload],\n      };\n\n    case LOAD_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n\n    case INPUT_VALUE:\n      return {\n        ...state,\n        inputValue: action.payload,\n      };\n\n    case SELECT_VALUE:\n      return {\n        ...state,\n        selectValue: action.payload,\n      };\n\n    case CLEAR_USER:\n      return {\n        ...state,\n        user: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer);\n","const API_URL = 'https://mate.academy/students-api/todos';\n\nexport async function getTodos():Promise<Todo> {\n  const response = await fetch(API_URL);\n\n  return response.json();\n}\n","export const getTodosSelector = (state: State) => state.todos;\nexport const getUserSelector = (state: State) => state.user;\nexport const getInputValue = (state: State) => state.inputValue;\nexport const getSelectValue = (state: State) => state.selectValue;\n","const API_URL = 'https://mate.academy/students-api/users/';\n\nexport async function getUser(userId: number) {\n  const response = await fetch(`${API_URL}${userId}`);\n\n  return response.json();\n}\n","import React, { useEffect, useMemo } from 'react';\nimport classNames from 'classnames';\nimport './TodoList.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTodos } from '../../api/todos';\nimport {\n  loadTodosActions,\n  loadUserAction,\n  setInputValue,\n  setSelectValue,\n} from '../../store/actions';\nimport {\n  getTodosSelector,\n  getUserSelector,\n  getInputValue,\n  getSelectValue,\n} from '../../store/selectors';\nimport { getUser } from '../../api/user';\n\nexport const TodosList: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const todos = useSelector(getTodosSelector);\n  const user = useSelector(getUserSelector);\n  const inputValue = useSelector(getInputValue);\n  const selectValue = useSelector(getSelectValue);\n\n  const handelSelectUser = async (userId: number) => {\n    if (userId !== user?.id) {\n      const userFromServer = await getUser(userId);\n\n      dispatch(loadUserAction(userFromServer));\n    }\n  };\n\n  const filterTodos = (): Todo[] => {\n    let filteredTodos;\n\n    switch (selectValue) {\n      case 'notCompleted':\n        filteredTodos = todos.filter(todo => !todo.completed);\n        break;\n\n      case 'completed':\n        filteredTodos = todos.filter(todo => todo.completed);\n        break;\n\n      default:\n        filteredTodos = [...todos];\n    }\n\n    return filteredTodos.filter(todo => (\n      todo.title.toLowerCase().includes(inputValue.toLocaleLowerCase())\n    ));\n  };\n\n  const filteredTodos = useMemo(filterTodos, [inputValue, selectValue, todos]);\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(setSelectValue(event.target.value));\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setInputValue(event.target.value));\n    filterTodos();\n  };\n\n  useEffect(() => {\n    const loadTodosFromServer = async () => {\n      const todosFromServer = await getTodos();\n\n      dispatch(loadTodosActions(todosFromServer));\n    };\n\n    loadTodosFromServer();\n  }, []);\n\n  return (\n    <div className=\"TodoList\">\n      <span>\n        <span className=\"has-text-link has-text-weight-bold\">Status:</span>\n        <select\n          value={selectValue}\n          onChange={(event) => {\n            handleSelectChange(event);\n          }}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"notCompleted\">Not completed</option>\n        </select>\n        <br />\n        <span className=\"has-text-link has-text-weight-bold\">Find by name:</span>\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={(event) => {\n            handleInputChange(event);\n          }}\n        />\n      </span>\n      <h2>Todos:</h2>\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {filteredTodos.map(todo => (\n            <li\n              key={todo.id}\n              className={\n                classNames('TodoList__item', {\n                  'TodoList__item--checked': todo.completed,\n                  'TodoList__item--unchecked': !todo.completed,\n                })\n              }\n            >\n              {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  readOnly\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                className={\n                  classNames('TodoList__user-button', 'button', {\n                    'TodoList__user-button--selected': todo.userId === user?.id,\n                  })\n                }\n                type=\"button\"\n                onClick={() => handelSelectUser(todo.userId)}\n              >\n                User #\n                {todo.userId}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserSelector } from '../../store/selectors';\nimport './CurrentUser.scss';\nimport { clearSelectedUser } from '../../store/actions';\n\nexport const CurrentUser: React.FC = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((getUserSelector));\n\n  const handelClearUser = () => {\n    dispatch(clearSelectedUser());\n  };\n\n  if (!user) {\n    return (\n      <div>No selected user</div>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${user.id}`}\n          </span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n        <br />\n      </div>\n      <button\n        onClick={handelClearUser}\n        type=\"button\"\n        className=\"button TodoList__user-button--selected clear-button\"\n      >\n        Clear\n      </button>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { TodosList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodosList />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          <CurrentUser />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store';\nimport App from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root: React.FC = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}